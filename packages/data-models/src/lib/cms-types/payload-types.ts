/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    cities: City;
    districts: District;
    companies: Company;
    'cooperation-modes': CooperationMode;
    'station-states': StationState;
    'station-types': StationType;
    stations: Station;
    'station-mutations': StationMutation;
    users: User;
    media: Media;
    'station-attachments': StationAttachment;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    username: string;
  };
  login: {
    password: string;
    username: string;
  };
  registerFirstUser: {
    password: string;
    username: string;
  };
  unlock: {
    username: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities".
 */
export interface City {
  id: string;
  code: string;
  name: string;
  /**
   * @minItems 2
   * @maxItems 2
   */
  position: [number, number];
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  name?: string | null;
  roles: ('admin' | 'user')[];
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email?: string | null;
  username: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "districts".
 */
export interface District {
  id: string;
  code: string;
  name: string;
  /**
   * @minItems 2
   * @maxItems 2
   */
  position: [number, number];
  city: string | City;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: string;
  name: string;
  contact?: string | null;
  cooperationMode?: (string | null) | CooperationMode;
  cities?: (string | City)[] | null;
  districts?: (string | District)[] | null;
  citiesNames?: string[] | null;
  detail?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cooperation-modes".
 */
export interface CooperationMode {
  id: string;
  code: string;
  name: string;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "station-states".
 */
export interface StationState {
  id: string;
  code: string;
  name: string;
  progress: number;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "station-types".
 */
export interface StationType {
  id: string;
  code: string;
  name: string;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stations".
 */
export interface Station {
  id: string;
  name: string;
  type: string | StationType;
  state: string | StationState;
  runningStatus: 'running' | 'closed';
  corporationNature?: string | null;
  industry?: string | null;
  company: string | Company;
  cooperationMode: string | CooperationMode;
  city: string | City;
  cityName?: string | null;
  district: string | District;
  address?: string | null;
  /**
   * @minItems 2
   * @maxItems 2
   */
  position: [number, number];
  annualFuel?: number | null;
  followUp?: (string | User)[] | null;
  attachments?: (string | StationAttachment)[] | null;
  dimensions?:
    | {
        title: string;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "station-attachments".
 */
export interface StationAttachment {
  id: string;
  caption?: string | null;
  station?: (string | null) | Station;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  blurhash?: string | null;
  blurhashSizes?: {
    thumbnail?: {
      blurhash?: string | null;
    };
    mobile?: {
      blurhash?: string | null;
    };
    desktop?: {
      blurhash?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    mobile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "station-mutations".
 */
export interface StationMutation {
  id: string;
  station: string | Station;
  fromState?: (string | null) | StationState;
  toState?: (string | null) | StationState;
  memo?: string | null;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  caption?: string | null;
  createdBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  createdByUser?: string | null;
  updatedBy?: {
    relationTo: 'users';
    value: string | User;
  } | null;
  updatedByUser?: string | null;
  blurhash?: string | null;
  blurhashSizes?: {
    thumbnail?: {
      blurhash?: string | null;
    };
    mobile?: {
      blurhash?: string | null;
    };
    desktop?: {
      blurhash?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    mobile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}
